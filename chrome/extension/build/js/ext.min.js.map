{"version":3,"file":"ext.min.js","sources":["background/msgRouter.js","background/localStorage.js","common/ExtMsgConstructor.js","common/ActionsList.js","common/NotifModule.js","background/state.js","background/user.js","common/dates.js","background/record.js","background/clickHandler.js","background/rt.js","background/listenContent.js","common/BadgeModule.js","background/popupController.js","background/listenPopup.js","background/listenOptions.js","background/SocketModule.js","BackgroundMain.js"],"names":["define","MessageRouter","chrome","runtime","onMessage","addListener","this","messageListener","bind","add","a","b","prototype","map","request","sender","sendResponse","action","err","console","warn","callback","Storage","ls","window","localStorage","setItem","name","item","skipStringify","JSON","stringify","error","getItem","skipParse","parse","ExtMsgConstructor","config","data","indexOf","actionPrefix","addPrefix","sourceStr","readyAction","msg","transform","ActionsList","popup","startClick","needState","gotState","content","clipboardClick","contextMenuClick","startTicketClick","gotTicketString","confluenceToggleMe","gotNameForToggle","state","need","got","user","workedTime","needUpdate","NotifModule","defaultTimeout","timeout","defaultIcon","icon","show","n","Notification","title","body","autoClose","setTimeout","close","msgRouter","ExtensionMessage","Notif","State","d","started","tickets","username","init","__init","onMsgGetState","restoreState","getState","toggleDayStart","endTime","Date","getTime","startTime","setState","startTicket","ticketData","validateTicketData","ticket","t","id","subject","queue","push","getTicketById","filter","setOptions","opts","broadcastUpdateState","sendMessage","setParam","value","getParam","UserConstructor","lastNameError","update","$","ajax","url","success","onUpdateUser","onFailUpdateUser","response","textStatus","xhr","isFunction","status","getName","getLastNameError","Dates","weekdays","full","short","months","getFullDate","date","needSex","getHumanDate","getHumanTime","month","day","dateFormatted","xx","getMonth","getDate","getFullYear","hours","mins","sex","getHours","getMinutes","getSeconds","parseInt","getDayName","getDay","getMonthName","dates","RecordMaker","make","details","summary","sanitizeSubject","textArr","key","setHours","setMinutes","unshift","join","copy","text","copyDiv","document","createElement","contentEditable","appendChild","innerHTML","unselectable","focus","execCommand","removeChild","before","after","replace","record","onItemClick","info","tab","tabs","onGetDetails","contextMenus","create","contexts","onclick","moduleDefiniton","RT","cfg","debug","getTicket","fullUrl","getTicketPattern","method","onGetTicket","onGetTicketError","call","protoStuff","nonJqueryAjax","res","parsedRes","parseResponse","errorText","statusText","ticketResponse","fields","ajaxParams","stuffName","amd","module","exports","RTConstructor","User","makeRecord","apply","makeAnswer","senderTabId","keyFunction","result","createSomethingByTicketData","getUserAndReturn","senderId","giveUsernameForConfluence","BadgeModule","defaultText","defaultTitle","defaultBgColor","loadingBgColor","finalRedColor","finalGreenColor","detailedTemplate","setLoading","setBadge","bgColor","setOverWorked","amount","detailed","setWorked","setUnderWorked","color","browserAction","setBadgeText","setTitle","setBadgeBackgroundColor","ExtMessage","Badge","PopupController","onStartClick","getWorkedTime","worked","loading","_sendWorkedTimeRequest","userName","timesheetUrl","today","_onGetWorkedTime","_onFailedGetWorkedTime","s","rest","absRest","total","restSuffix","monthYearRegexp","RegExp","match","length","substring","split","slice","parseFloat","isNaN","toFixed","Math","abs","workedTimeStr","str","popupController","SocketModule","background","me","io","on","log","onSubmitTimesheet","onSocketMessageSubmit","require","clickHandler","listenContent","listenPopup","listenOptions","Socket","BackGround","onGotName","bg"],"mappings":"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AAAC,GAAAzR,IACAA,MAAA0R,GAAA,GAAAA,IAAA,yBACA1R,KAAA0R,GAAAC,GAAA,kBAAA,SAAArP,GACAzB,QAAA+Q,IAAA,YAAAtP,GACA,WAAAA,GACAmP,EAAAI,sBAGA7R,KAAAwR,WAAAA,GAGAD,EAAAjR,UAAAuR,kBAAA,WACA,IACA7R,KAAAwR,WAAAM,wBACA,MAAAlR,MAIA,GAAA2Q,KCtBAQ,SACA,kBACA,0BACA,2BACA,yBACA,2BACA,2BACA,SAAAzE,EAAA0E,EAAAC,EAAAC,EAAAC,EAAAC,GAMA,QAAAC,KACArS,KAAAsS,UAAA,SAAAlS,GACAS,QAAA+Q,IAAA,cAAAtE,EAAA5F,WAAA4F,EAAA3F,oBACAuK,EAAAZ,gBAAA5B,iBAGA1P,KAAA8R,sBAAA,WACAI,EAAAZ,gBAAA5B,iBAXA,GAAA6C,GAAA,GAAAF,EACAD,GAAArN,KAAAwN,GACAjF,EAAAxG,OAAAyL,EAAAD,UAAApS,KAAAqS,MAcA7S,OAAA,iBAAA;AjB5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzzGA,AD0GA;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA,ADoDA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChhIA,ADiIA;AChIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA,ADoFA;ACnzGA,AD0GA;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA,ADmBA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA,AD8BA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* global chrome */\n\ndefine('background/msgRouter',[\n], function(){\n    function MessageRouter(){\n        chrome.runtime.onMessage.addListener(this.messageListener.bind(this));\n\n        this.add = function(a,b){\n            this[a] = b;\n        };\n    }\n\n    // one action - one callback\n    MessageRouter.prototype.map = {};\n\n    /**\n     * Function, which handles messages\n     * @param {Object} request POJO with required 'action' property\n     * @param {String} request.action\n     * @param {Object} sender Chrome tab\n     * @param {Function} sendResponse Call special function, which is waiting for an answer\n     * @returns {undefined}\n     */\n    MessageRouter.prototype.messageListener = function (request, sender, sendResponse) {\n        try{\n            var action = request.action;\n            if ( this.map[action] && typeof this.map[action] === 'function' ){\n                this.map[action](request, sender, sendResponse); // provide already bound functions if needed\n            }\n        }catch(err){\n            console.warn('Message processing has failed. Let the developer know about that.' + err);\n        }\n    };\n\n    /**\n     * Add one association \"action->handler\", which is checked with every\n     * message came\n     * @param {String} action\n     * @param {Function} callback\n     * @returns {undefined}\n     */\n    MessageRouter.prototype.addListener = function (action, callback) {\n        this.map[action] = callback; // one action - one callback\n    };\n\n    return new MessageRouter();\n\n});\n\n\n","/* global chrome */\n\ndefine('background/localStorage',[\n], function(){\n    var ls = window.localStorage;\n    // handles local storage\n    function Storage(){\n\n    }\n\n    Storage.prototype.setItem = function(name, item, skipStringify){\n        try{\n            ls.setItem(name, skipStringify ? item : JSON.stringify(item));\n        }catch(err){\n            console.error('setItem fails', err);\n            return false;\n        }\n        return true;\n    };\n\n    Storage.prototype.getItem = function(name, skipParse){\n        var item;\n        try{\n            item = ls.getItem(name);\n            item = skipParse ? item : JSON.parse(item);\n        }catch(err){\n            console.error('setItem fails', err);\n            return false;\n        }\n        return item;\n    };\n\n    return new Storage();\n\n});\n\n\n","define('common/ExtMsgConstructor',[\n], function(){\n    function ExtMsgConstructor(config){\n        if (typeof config.action === 'undefined' || typeof config.data === 'undefined'){\n            throw 'Action and data properties are required';\n        }\n\n        this.action = config.action;\n        this.data = config.data;\n\n        if (this.action.indexOf(this.actionPrefix) < 0){\n            this.action = this.addPrefix(this.action);\n        }\n    }\n    ExtMsgConstructor.prototype.actionPrefix = 'ts_ext_';\n    ExtMsgConstructor.prototype.addPrefix = function(sourceStr){\n        var readyAction = sourceStr.indexOf(this.actionPrefix) < 0 ? (this.actionPrefix + sourceStr) : sourceStr;\n        return readyAction;\n    };\n\n    return ExtMsgConstructor;\n});\n","define('common/ActionsList',[\n    'common/ExtMsgConstructor'\n], function(msg){\n    var transform = msg.prototype.addPrefix.bind(msg.prototype);\n    var ActionsList = {\n        popup: {\n            startClick: transform('popupStartButton'),\n            needState: transform('popupNeedState'),\n            gotState: transform('popupGotState')\n        },\n        content: {\n            clipboardClick: transform('getTicketData'),\n            contextMenuClick: transform('getTicketDataByContextMenu'),\n            startTicketClick: transform('startTicketClick'),\n            gotTicketString: transform('hereIsTheTicketString'),\n            confluenceToggleMe: transform('confluenceToggleMe'),\n            gotNameForToggle: transform('hereIsUserNameForConfluenceToggleMe')\n        },\n        state: {\n            need: transform('generalNeedState'),\n            got: transform('generalGotState')\n        },\n        user: {\n            need: transform('generalNeedUser'),\n            got: transform('generalGotUser')\n        },\n        workedTime: {\n            needUpdate: transform('pleaseUpdateWorkedTime')\n        }\n    };\n\n    return ActionsList;\n});\n","define('common/NotifModule',[\n], function(){\n    /**\n     * @class NotifModule\n     * @param {Object} config\n     */\n    function NotifModule(config){\n        config = config || {};\n        /**\n         * @cfg {Number} milliseconds to autoclose\n         */\n        this.defaultTimeout = config.timeout || 3000;\n        /**\n         * @cfg {String} path to icon\n         */\n        this.defaultIcon = config.icon || 'img/icon48.png';\n    }\n\n    /**\n     * Shows notif\n     * @param {Object} config\n     * @param {Number} [config.timeout] milliseconds to autoclose,\n     * if undefined - {@link NotifModule#defaultTimeout}\n     * @param {String} [config.title] Message title, default is ''\n     * @param {String} [config.body] Message body, default is ''\n     * @param {Boolean} [config.autoClose] Set to true to auto close notif after given or default timeout\n     * @return {Notification}\n     */\n    NotifModule.prototype.show = function(config){\n        config = config || {};\n        var n = new Notification(config.title || '', {\n            icon: this.defaultIcon,\n            body: config.body || ''\n        });\n        if (config.autoClose){\n            setTimeout(n.close.bind(n), this.defaultTimeout || config.timeout);\n        }\n        return n;\n    };\n\n    return new NotifModule();\n});\n","/* global chrome */\n\ndefine('background/state',[\n    'background/msgRouter',\n    'background/localStorage',\n    'common/ExtMsgConstructor',\n    'common/ActionsList',\n    'common/NotifModule'\n], function (msgRouter, ls, ExtensionMessage, ActionsList, Notif) {\n    // handles clicks on 'start' popup button (it may change its caption)\n    function State() {\n\n    }\n    // d is for data\n    State.prototype.d = {\n        started: false,\n        tickets: [],\n        username: ''\n    };\n\n    State.prototype.init = function () {\n        if (!this.__init) {\n            msgRouter.addListener(ActionsList.state.need, this.onMsgGetState.bind(this));\n            this.restoreState();\n            this.__init = true;\n        }\n        return this;\n    };\n\n    State.prototype.onMsgGetState = function (request, sender, sendResponse) {\n        sendResponse(this.getState());\n    };\n\n    /**\n     *\n     * @returns {Boolean} Current state after switch\n     */\n    State.prototype.toggleDayStart = function () {\n        var d = this.d;\n        if (d.started) {\n            d.started = false;\n            d.endTime = new Date().getTime();\n        } else {\n            d.started = true;\n            d.startTime = new Date().getTime();\n        }\n        this.setState();\n    };\n\n    State.prototype.startTicket = function (ticketData) {\n        // {id, queue, subject} - ticketData\n        if (!this.validateTicketData(ticketData)) {\n            return;\n        }\n        this.d.tickets = this.d.tickets || [];\n        var ticket, t;\n        t = ticketData;\n\n\n        // we'll start with having only one active ticket\n        /*\n         ticket = this.getTicketById(t.id);\n         if (ticket){\n            ticket.started = new Date().getTime();\n         }else{\n         ticket = {\n            id: t.id,\n            subject: t.subject,\n            queue: t.queue,\n            started: new Date().getTime()\n         };\n         this.d.tickets.push(ticket);\n         }\n         */\n\n        // implementation of single-ticket approach\n        this.d.tickets = []; // drop everything\n        ticket = {\n            id: t.id,\n            subject: t.subject,\n            queue: t.queue,\n            started: new Date().getTime()\n        };\n        this.d.tickets.push(ticket);\n\n        this.setState();\n        Notif.show({\n            title: 'Ticket started',\n            body: ticket.id + ': ' + ticket.subject,\n            autoClose: true\n        });\n        return ticket;\n    };\n\n    State.prototype.validateTicketData = function (data) {\n        return data.id && data.queue && data.subject;\n    };\n\n    State.prototype.getTicketById = function (id) {\n        this.d.tickets = this.d.tickets || [];\n        return this.d.tickets.filter(function (item) {\n            return item.id === id;\n        })[0];\n    };\n    /**\n     *\n     * @param {Object} opts\n     * @returns {Object} State\n     */\n    State.prototype.setOptions = function (opts) {\n        var d = this.d;\n        opts = opts || opts;\n        this.d.opts = opts;\n\n        this.setState();\n        return this.getState();\n    };\n\n    State.prototype.broadcastUpdateState = function () {\n        chrome.runtime.sendMessage(\n            new ExtensionMessage({\n                action: ActionsList.state.got,\n                data: {\n                    state: this.d\n                }\n            })\n        );\n    };\n\n    State.prototype.restoreState = function () {\n        var state = this.getState();\n        if (!!state) {\n            this.d = state;\n        }\n    };\n\n    State.prototype.setParam = function(name, value) {\n        this.d[name] = value;\n        this.setState();\n    };\n\n    State.prototype.getParam = function(name) {\n        return this.getState()[name];\n    };\n\n    State.prototype.setState = function() {\n        ls.setItem('state', this.d);\n        this.broadcastUpdateState();\n    };\n\n    State.prototype.getState = function() {\n        return ls.getItem('state') || {};\n    };\n\n    return new State().init();\n\n});\n\n\n","/* global chrome */\n\ndefine('background/user',[\n    'background/state'\n], function (state) {\n    function UserConstructor() {\n        this.name = '';\n        this.lastNameError = '';\n    }\n\n    UserConstructor.prototype.update = function (callback) {\n        $.ajax({\n            url: 'http://localhost:5555/user',\n            success: this.onUpdateUser.bind(this, callback),\n            error: this.onFailUpdateUser.bind(this, callback)\n        });\n    };\n\n    UserConstructor.prototype.onUpdateUser = function (callback, response, textStatus, xhr) {\n        if (!!response){\n            if ( response === '' ){\n                this.lastNameError = 'Empty name';\n                this.name = '';\n            }else{\n                this.lastNameError = '';\n                this.name = response;\n            }\n        }else{\n            this.lastNameError = 'unknown error';\n            this.name = '';\n        }\n        state.setParam('username', this.name);\n        state.setParam('usernameError', this.lastNameError);\n        if (callback && $.isFunction(callback)) {\n            callback(response, xhr, textStatus);\n        }\n    };\n\n    UserConstructor.prototype.onFailUpdateUser = function (callback, xhr, textStatus) {\n        this.lastNameError = 'error: ' + xhr.status;\n        this.name = '';\n        state.setParam('username', '');\n        state.setParam('usernameError', this.lastNameError);\n        if (callback && $.isFunction(callback)) {\n            callback(null, xhr, textStatus);\n        }\n    };\n\n    UserConstructor.prototype.getName = function () {\n        return state.getParam('username');\n    };\n\n    UserConstructor.prototype.getLastNameError = function () {\n        return state.getParam('usernameError');\n    };\n\n    return new UserConstructor();\n});\n\n\n","/* global chrome */\n\ndefine('common/dates',[\n], function(){\n    function Dates(){\n    }\n    Dates.prototype.weekdays = {\n        full: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ],\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ]\n    };\n    Dates.prototype.months = {\n        full: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ],\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ]\n    };\n    Dates.prototype.getFullDate = function (date, needSex) {\n        return this.getHumanDate(date) + ' ' + this.getHumanTime(date, needSex);\n    };\n\n    Dates.prototype.getHumanDate = function (date) {\n        var month, day, dateFormatted;\n        date = new Date(date.getTime());\n        month = this.xx( date.getMonth() + 1 );\n        day = this.xx( date.getDate() );\n        dateFormatted = date.getFullYear() + '-' + month + '-' + day;\n\n        return dateFormatted;\n    };\n\n    Dates.prototype.getHumanTime = function (date, needSex) {\n        var hours, mins, sex, dateFormatted;\n        hours = this.xx( date.getHours() );\n        mins = this.xx( date.getMinutes() );\n        sex = this.xx( date.getSeconds() ); // \"secs\" =)\n        dateFormatted = hours + ':' + mins + (needSex ? (':' + sex) : '');\n\n        return dateFormatted;\n    };\n    /**\n     * Two digits, '1' -> '01'\n     * @param {Number} value\n     * @returns {String}\n     */\n    Dates.prototype.xx = function (value) {\n        value = parseInt(value, 10);\n        return value < 10 ? '0' + value : (value + '');\n    };\n\n    Dates.prototype.getDayName = function(date, opts){\n        opts = opts || {};\n        var d = date || new Date();\n        return this.weekdays[opts.short ? 'short' : 'full'][d.getDay()];\n    };\n    Dates.prototype.getMonthName = function(date, opts){\n        opts = opts || {};\n        var d = date || new Date();\n        return this.months[opts.short ? 'short' : 'full'][d.getMonth()];\n    };\n\n\n    return new Dates();\n\n});\n\n\n","define('background/record',[\n    'common/dates'\n], function(dates){\n    function RecordMaker(){\n    }\n\n    RecordMaker.prototype.make = function(details){\n        var dateFormatted, date, month, day, endTime, startTime, hours, mins;\n        details.summary = this.sanitizeSubject(details.summary);\n        var textArr = [details.key, '\"' + details.summary + '\"'];\n\n        date = new Date();\n        dateFormatted = dates.getHumanDate(date);\n\n        endTime = dates.getHumanTime(date);\n\n        date.setHours(10);\n        date.setMinutes(0);\n\n        startTime = dates.getHumanTime(date);\n\n        textArr.unshift(endTime);\n        textArr.unshift(startTime);\n        textArr.unshift(dateFormatted);\n\n        textArr = textArr.join(',');\n\n        this.copy(textArr);\n        return textArr;\n    };\n\n    RecordMaker.prototype.copy = function(text){\n        var copyDiv = document.createElement('div');\n        copyDiv.contentEditable = true;\n        document.body.appendChild(copyDiv);\n        copyDiv.innerHTML = text;\n        copyDiv.unselectable = \"off\";\n        copyDiv.focus();\n        document.execCommand('SelectAll');\n        document.execCommand(\"Copy\", false, null);\n        document.body.removeChild(copyDiv);\n    };\n\n    RecordMaker.prototype.sanitizeSubject = function(before){\n        var after;\n\n        after = before.replace(/\"/gim, '\\'');\n        return after;\n    };\n\n    return new RecordMaker();\n});\n","/* global chrome */\n\ndefine('background/clickHandler',[\n    'background/record',\n    'common/ExtMsgConstructor',\n    'common/ActionsList'\n], function (record, ExtensionMessage, ActionsList) {\n    chrome.contextMenus.create(\n        {\n            title: 'Form TS rec and ctrl+C',\n            contexts: [\"page\", \"selection\"],\n            onclick: onItemClick\n        }\n    );\n\n    // context menu click handler\n    function onItemClick(info, tab) {\n        chrome.tabs.sendMessage(\n            tab.id,\n            new ExtensionMessage({\n                action: ActionsList.content.contextMenuClick,\n                data: ''\n            }),\n            onGetDetails.bind(this, info)\n        );\n    }\n\n    function onGetDetails(info, details) {\n        details = details || {};\n        record.make(details);\n    }\n});\n","/* global module, define */\n(function () {\n    function moduleDefiniton() {\n        /**\n         * Manage RT with its REST API\n         * @class RT\n         * @param {Object} [cfg]\n         * @param {String} [cfg.url]\n         * @singleton\n         */\n        function RT(cfg) {\n\n            function init() {\n                this.url = cfg.url || this.url; // always put a property in instance, I wanna see it in console\n                this.debug = typeof cfg.debug !== 'undefined' ? cfg.debug : this.debug;\n            }\n\n            /**\n             *\n             * @param {Number|String} id\n             * @param {Function} [callback]\n             * callback param:\n             *      {\n             *          success: true,\n             *          ticketData: {\n             *              id: \"1\",\n             *              owner: \"you\"\n             *          },\n             *          errorText: \"\"\n             *      }\n             * @return {undefined}\n             */\n            this.getTicket = function (id, callback) {\n                var fullUrl;\n                fullUrl = this.url + this.getTicketPattern.replace('%id%', id);\n                this.ajax({\n                    method: 'GET',\n                    url: fullUrl,\n                    success: this.onGetTicket.bind(this, callback),\n                    error: this.onGetTicketError.bind(this, callback)\n                });\n            };\n\n            return init.call(this);\n        }\n\n\n        var protoStuff = {\n            /**\n             * @param {String}\n             */\n            url: 'http://rt.easter-eggs.org/demos/4.2/',\n            getTicketPattern: '/issue/%id%',\n            debug: true,\n            /**\n             * Custom AJAX function, implement it yourself if wanna be jquery-independent\n             */\n            nonJqueryAjax: null,\n            onGetTicket: function (callback, res) {\n                var parsedRes = this.parseResponse(res);\n\n                if (!parsedRes.success){\n                    this.debug && console.error('Error getting ticket data: ', parsedRes.errorText || '<No error text>');\n                }else if ( callback && typeof callback === 'function' ){\n                    callback(parsedRes); // assuming scope and everything is bound already\n                }\n            },\n            onGetTicketError: function (callback, res) {\n                var errorText = res.statusText || '<No error text>';\n                this.debug && console.error('Error getting ticket data: ', errorText, ' Status: ' + res.status);\n\n                if ( callback && typeof callback === 'function' ){\n                    callback({\n                        success: false,\n                        data: {},\n                        errorText: errorText\n                    });\n                }\n            },\n            parseResponse: function(ticketResponse) {\n                var id, key, summary, errorText;\n                var success = true;\n                try {\n                    id = ticketResponse.id;\n                    key = ticketResponse.key;\n                    summary = ticketResponse.fields.summary;\n\n                } catch(err) {\n                    success = false;\n                    errorText = 'Ticket info does not contain vital info, something is wrong';\n                }\n                return {\n                    success: success,\n                    errorText: errorText,\n                    ticketData: {\n                        id: id,\n                        key: key,\n                        summary: summary\n                    }\n                };\n            },\n            ajax: function(ajaxParams){\n                if (this.nonJqueryAjax){\n                    return this.nonJqueryAjax(ajaxParams);\n                }else{\n                    return $.ajax(ajaxParams);\n                }\n            }\n        };\n\n        for (var stuffName in protoStuff) {\n            if (typeof protoStuff[stuffName] === 'function') {\n                RT.prototype[stuffName] = protoStuff[stuffName].bind(RT.prototype);\n            } else {\n                RT.prototype[stuffName] = protoStuff[stuffName];\n            }\n        }\n\n        return RT;\n    }\n\n    if (typeof define === \"function\" && define.amd) {\n        define('background/rt',[], moduleDefiniton);\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = moduleDefiniton;\n    } else {\n        window['RTIConstructor'] = moduleDefiniton();\n    }\n})();\n","/* global chrome */\n\ndefine('background/listenContent',[\n    'background/record',\n    'background/msgRouter',\n    'background/state',\n    'background/rt',\n    'background/user',\n    'common/ExtMsgConstructor',\n    'common/ActionsList'\n], function(record, msgRouter, state, RTConstructor, User, ExtensionMessage, ActionsList){\n    msgRouter.addListener(ActionsList.content.clipboardClick, createSomethingByTicketData);\n    msgRouter.addListener(ActionsList.content.startTicketClick, createSomethingByTicketData);\n\n    msgRouter.addListener(ActionsList.content.confluenceToggleMe, getUserAndReturn);\n\n    var RT = new RTConstructor({\n        //url: 'https://www.iponweb.net/rt/REST/1.0/'\n        url: 'https://jira.iponweb.net/rest/api/latest'\n    });\n\n    function makeRecord(ticketData){\n        return record.make.apply(record, [ticketData]);\n    }\n\n    function startTicket(ticketData){\n        return state.startTicket(ticketData);\n    }\n\n    /**\n     * General function, must be bound with sender tab id and keyFunction\n     * it receives ticket data from RT as 3rd argument, calls keyFunction method and\n     * returns result via chome message into the sender tab by its id\n     * @param {Number|String} senderTabId\n     * @param {Function} keyFunction\n     * @param {Object} ticketResponse\n     * @returns {undefined}\n     */\n    function makeAnswer(senderTabId, keyFunction, ticketResponse){\n        var result = {};\n        ticketResponse = ticketResponse || {};\n        if ( ticketResponse.success && ticketResponse.ticketData){\n            try{\n                result = keyFunction(ticketResponse.ticketData);\n            }catch(err){\n                console.error('Error while running keyFunction inside makeAnswer', err);\n            }\n            chrome.tabs.sendMessage(\n                senderTabId,\n                new ExtensionMessage({\n                    action: ActionsList.content.gotTicketString,\n                    data: result\n                })\n            );\n        }\n    }\n\n    function createSomethingByTicketData(request, sender){\n        var keyFunction;\n        if (!request.data || !request.data.id){\n            throw 'Ticket ID is required to get ticket info from RT';\n        }\n        switch(request.action){\n            case ActionsList.content.clipboardClick:\n                keyFunction = makeRecord;\n                break;\n            case ActionsList.content.startTicketClick:\n                keyFunction = startTicket;\n                break;\n        }\n        RT.getTicket(request.data.id, makeAnswer.bind(this, sender.tab.id, keyFunction));\n    }\n\n    function getUserAndReturn(request, sender){\n        var senderId = sender.tab.id;\n        if (!!User.name){\n            giveUsernameForConfluence(senderId, User.name);\n        }else{\n            User.update(\n                giveUsernameForConfluence.bind(senderId)\n            );\n        }\n    }\n\n    function giveUsernameForConfluence(senderId, name){\n        chrome.tabs.sendMessage(\n            senderId,\n            new ExtensionMessage({\n                action: ActionsList.content.gotNameForToggle,\n                data: name\n            })\n        );\n    }\n});\n\n\n","/* global chrome */\n\ndefine('common/BadgeModule',[\n], function(){\n    /**\n     * @class BadgeModule\n     */\n    function BadgeModule(){\n        /**\n         * @cfg {String}\n         */\n        this.defaultText = '';\n        /**\n         * @cfg {String}\n         */\n        this.defaultTitle = '';\n        /**\n         * @cfg {String}\n         */\n        this.defaultBgColor = '#6D0073'; // dark-violet\n        /**\n         * @cfg {String} While extension is loading or updating something inside badge\n         */\n        this.loadingBgColor = '#666666';\n        /**\n         * @cfg {String} color for \"bad\" things\n         */\n        this.finalRedColor = '#D20000'; // hue = 0\n        /**\n         * @cfg {String} color for \"good\" things\n         */\n        this.finalGreenColor = '#46D200'; // hue = 100\n        /**\n         * @cfg {String} Prefix for badge title to display detailed text of worked time\n         */\n        this.detailedTemplate = 'Worked/total :: ';\n    }\n\n    BadgeModule.prototype.setLoading = function(){\n        this.setBadge({\n            text: '...',\n            title: 'Updating...',\n            bgColor: this.loadingBgColor\n        });\n    };\n\n    BadgeModule.prototype.setOverWorked = function(amount, detailed){\n        this.setWorked(amount, detailed, this.finalGreenColor);\n    };\n\n    BadgeModule.prototype.setUnderWorked = function(amount, detailed){\n        this.setWorked(amount, detailed, this.finalRedColor);\n    };\n\n    BadgeModule.prototype.setWorked = function(amount, detailed, color){\n        this.setBadge({\n            text: amount + '',\n            title: this.detailedTemplate + detailed,\n            bgColor: color\n        });\n    };\n\n    /**\n     * Shows notif\n     * @param {Object} config\n     * @param {Number} [config.text] text on badge (very limited, around 4 characters)\n     * @param {String} [config.title] title which is displayed on hover\n     * @param {String} [config.bgColor] a background color <b>for the badge text</b>\n     */\n    BadgeModule.prototype.setBadge = function(config){\n        config = config || {};\n        chrome.browserAction.setBadgeText({\n            text: config.text || this.defaultText\n        });\n        chrome.browserAction.setTitle({\n            title: config.title || this.defaultTitle\n        });\n        chrome.browserAction.setBadgeBackgroundColor({\n            color: config.bgColor || this.defaultBgColor\n        });\n    };\n\n    return new BadgeModule();\n});\n","/* global chrome */\n\ndefine('background/popupController',[\n    'common/dates',\n    'background/state',\n    'background/user',\n    'common/ExtMsgConstructor',\n    'common/BadgeModule'\n], function (Dates, state, User, ExtMessage, Badge) {\n    function PopupController() {\n\n    }\n\n    PopupController.prototype.onStartClick = function (request, sender, sendResponse) {\n        state.toggleDayStart();\n        sendResponse(state.d);\n    };\n    PopupController.prototype.getWorkedTime = function () {\n        this.worked = {\n            loading: true\n        };\n        state.setParam('workedTime', this.worked);\n        Badge.setLoading();\n        User.update(\n            this._sendWorkedTimeRequest.bind(this)\n        );\n    };\n\n    PopupController.prototype._sendWorkedTimeRequest = function (userName) {\n        //2016.07+-+July\n        var timesheetUrl = 'https://confluence.iponweb.net/display/TIMESHEETS/';\n        var today = new Date();\n        var month = (today.getMonth() + 1);\n        month = month < 10 ? '0' + month : month;\n        timesheetUrl += today.getFullYear() + '.' + month + '+-+' + Dates.getMonthName(today);\n        \n        $.ajax({\n            method: 'GET',\n            url: timesheetUrl,\n            timeout: 10000,\n            success: this._onGetWorkedTime.bind(this, userName),\n            error: this._onFailedGetWorkedTime.bind(this)\n        });\n    };\n\n    PopupController.prototype._onGetWorkedTime = function (userName, res) {\n        if (!res) {\n            console.error('Empty worked time response');\n        }\n        var s, rest, absRest, total, worked, restSuffix, today, monthYearRegexp;\n        s = res;\n        today = new Date();\n        monthYearRegexp = new RegExp('Working hours:\\\\s(\\\\d+)', 'm');\n        total = s.match(monthYearRegexp);\n        total = total && total.length > 0 && total[1] || 'unknown';\n        worked = s.substring(s.indexOf('<th class=\"confluenceTh\">' + userName + '</th>'))\n            .split('\\n').slice(0,1)[0];\n\n        worked = worked.match(/<th class=\"confluenceTh\">(.+?)<\\/th>/g)[2];\n        worked = worked.replace(/[^\\d\\.]/g, '');\n        worked = parseFloat(worked);\n\n        if (total && total !== 'unknown' && !isNaN(worked)) {\n            rest = (total - worked).toFixed(1);\n            absRest = Math.abs(rest);\n            restSuffix = rest > 0 ? ('(' + absRest + 'h left)') : ('(' + absRest + 'h overworked)');\n            this.workedTimeStr = worked + '/' + total + ' ' + restSuffix;\n            rest = parseFloat(rest);\n\n            this.worked = {\n                worked: parseFloat(worked),\n                total: parseFloat(total),\n                rest: rest,\n                str: this.workedTimeStr\n            };\n\n            if (rest > 0) {\n                Badge.setUnderWorked('-' + absRest, this.workedTimeStr);\n            } else {\n                Badge.setOverWorked('+' + absRest, this.workedTimeStr);\n            }\n\n        }else{\n            console.error('Error in worked time calculation, something has gone wrong');\n            this.worked = {\n                str: 'Error'\n            };\n        }\n        state.setParam('workedTime', this.worked);\n    };\n\n    PopupController.prototype._onFailedGetWorkedTime = function (res) {\n        this.worked = {\n            worked: 0,\n            total: 0,\n            rest: 0,\n            str: 'fail'\n        };\n        state.setParam('workedTime', this.worked);\n        console.error('Failed to get worked time', res);\n    };\n\n    return new PopupController();\n});\n\n\n","/* global chrome */\n\ndefine('background/listenPopup',[\n    'background/msgRouter',\n    'background/popupController',\n    'common/ActionsList'\n], function(msgRouter, popupController, ActionsList){\n    msgRouter.addListener(\n        ActionsList.popup.startClick,\n        popupController.onStartClick.bind(popupController)\n    );\n    msgRouter.addListener(\n        ActionsList.workedTime.needUpdate,\n        popupController.getWorkedTime.bind(popupController)\n    );\n\n    return {\n        popupController: popupController\n    };\n});\n\n\n","/* global chrome */\n\ndefine('background/listenOptions',[\n    'background/msgRouter',\n    'background/state'\n], function(msgRouter, state){\n    msgRouter.addListener('setOptions', setOptions);\n\n    function setOptions(request){\n        try{\n            state.setOptions(request.opts);\n        }catch(err){\n            // and what?, TODO\n        }\n    }\n\n});\n\n\n","/* global chrome, io */\n\ndefine('background/SocketModule',[\n], function(){\n    function SocketModule(){\n    }\n\n    SocketModule.prototype.init = function (background) {\n        var me = this;\n        this.io = new io('http://127.0.0.1:5555');\n        this.io.on('backend message', function (msg) {\n            console.log('message: ' + msg);\n            if (msg === 'submit'){\n                me.onSubmitTimesheet();\n            }\n        });\n        this.background = background;\n    };\n\n    SocketModule.prototype.onSubmitTimesheet = function(){\n        try{\n            this.background.onSocketMessageSubmit();\n        }catch(err){\n\n        }\n    };\n    return new SocketModule();\n});\n\n\n","/**\n * This is the main JS file for background script, it is a subject to grunt's build routine.\n */\n\nrequire([\n    'background/user',\n    'background/clickHandler',\n    'background/listenContent',\n    'background/listenPopup',\n    'background/listenOptions',\n    'background/SocketModule'\n], function(User, clickHandler, listenContent, listenPopup, listenOptions, Socket){\n\n    var bg = new BackGround();\n    Socket.init(bg);\n    User.update(bg.onGotName.bind(bg));\n\n    function BackGround(){\n        this.onGotName = function(a){\n            console.log( 'User name: ', User.getName() || User.getLastNameError());\n            listenPopup.popupController.getWorkedTime();\n        };\n\n        this.onSocketMessageSubmit = function(){\n            listenPopup.popupController.getWorkedTime();\n        };\n    }\n});\n\ndefine(\"BackgroundMain\", function(){});\n\n"]}