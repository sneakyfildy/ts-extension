{"version":3,"file":"ext.min.js","sources":["background/msgRouter.js","background/localStorage.js","common/ExtMsgConstructor.js","common/ActionsList.js","common/NotifModule.js","background/state.js","background/user.js","common/dates.js","background/record.js","background/clickHandler.js","background/rt.js","background/listenContent.js","common/BadgeModule.js","background/popupController.js","background/listenPopup.js","background/listenOptions.js","BackgroundMain.js"],"names":["define","MessageRouter","chrome","runtime","onMessage","addListener","this","messageListener","bind","add","a","b","prototype","map","request","sender","sendResponse","action","err","console","warn","callback","Storage","ls","window","localStorage","setItem","name","item","skipStringify","JSON","stringify","error","getItem","skipParse","parse","ExtMsgConstructor","config","data","indexOf","actionPrefix","addPrefix","sourceStr","readyAction","msg","transform","ActionsList","popup","startClick","needState","gotState","content","clipboardClick","contextMenuClick","startTicketClick","gotTicketString","state","need","got","workedTime","needUpdate","NotifModule","defaultTimeout","timeout","defaultIcon","icon","show","n","Notification","title","body","autoClose","setTimeout","close","msgRouter","ExtensionMessage","Notif","State","d","started","tickets","username","init","__init","onMsgGetState","restoreState","getState","toggleDayStart","endTime","Date","getTime","startTime","setState","startTicket","ticketData","validateTicketData","ticket","t","id","subject","queue","push","getTicketById","filter","setOptions","opts","broadcastUpdateState","sendMessage","setParam","value","getParam","UserConstructor","lastNameError","update","$","ajax","url","success","onUpdateUser","onFailUpdateUser","response","textStatus","xhr","isFunction","status","getName","getLastNameError","Dates","weekdays","full","short","months","getFullDate","date","needSex","getHumanDate","getHumanTime","month","day","dateFormatted","xx","getMonth","getDate","getFullYear","hours","mins","sex","getHours","getMinutes","getSeconds","parseInt","getDayName","getDay","getMonthName","dates","RecordMaker","make","details","sanitizeSubject","textArr","setHours","setMinutes","unshift","join","copy","text","copyDiv","document","createElement","contentEditable","appendChild","innerHTML","unselectable","focus","execCommand","removeChild","before","after","replace","record","onItemClick","info","tab","tabs","onGetDetails","contextMenus","create","contexts","onclick","moduleDefiniton","RT","cfg","debug","getTicket","fullUrl","getTicketPattern","method","onGetTicket","onGetTicketError","call","protoStuff","nonJqueryAjax","res","parsedRes","parseResponse","errorText","statusText","ticketResponse","r","statusLine","emptyLine","possibleErrorLine","line","split","shift","toLowerCase","i","length","ajaxParams","stuffName","amd","module","exports","RTConstructor","makeRecord","apply","makeAnswer","senderTabId","keyFunction","result","createSomethingByTicketData","BadgeModule","defaultText","defaultTitle","defaultBgColor","loadingBgColor","finalRedColor","finalGreenColor","detailedTemplate","setLoading","setBadge","bgColor","setOverWorked","amount","detailed","setWorked","setUnderWorked","color","browserAction","setBadgeText","setTitle","setBadgeBackgroundColor","User","ExtMessage","Badge","PopupController","onStartClick","getWorkedTime","worked","loading","_sendWorkedTimeRequest","userName","timesheetUrl","today","_onGetWorkedTime","_onFailedGetWorkedTime","s","rest","total","restSuffix","match","substring","splice","parseFloat","isNaN","toFixed","workedTimeStr","str","popupController","require","clickHandler","listenContent","listenPopup","listenOptions","BackGround","onGotName","log","bg"],"mappings":"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A/H,WAAA+H,EAAA9H,oBACA4J,EAAAJ,gBAAArB,iBANA,GAAA8B,GAAA,GAAAH,EACAhC,GAAA3I,OAAA8K,EAAAF,UAAArR,KAAAuR,MAUA/R,OAAA,iBAAA;AhBrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzzGA,AD0GA;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA,ADsDA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChlJA,ADmJA;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA,ADoFA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjGA,ADkGA;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA,ADmBA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* global chrome */\n\ndefine('background/msgRouter',[\n], function(){\n    function MessageRouter(){\n        chrome.runtime.onMessage.addListener(this.messageListener.bind(this));\n\n        this.add = function(a,b){\n            this[a] = b;\n        };\n    }\n\n    // one action - one callback\n    MessageRouter.prototype.map = {};\n\n    /**\n     * Function, which handles messages\n     * @param {Object} request POJO with required 'action' property\n     * @param {String} request.action\n     * @param {Object} sender Chrome tab\n     * @param {Function} sendResponse Call special function, which is waiting for an answer\n     * @returns {undefined}\n     */\n    MessageRouter.prototype.messageListener = function (request, sender, sendResponse) {\n        try{\n            var action = request.action;\n            if ( this.map[action] && typeof this.map[action] === 'function' ){\n                this.map[action](request, sender, sendResponse); // provide already bound functions if needed\n            }\n        }catch(err){\n            console.warn('Message processing has failed. Let the developer know about that.' + err);\n        }\n    };\n\n    /**\n     * Add one association \"action->handler\", which is checked with every\n     * message came\n     * @param {String} action\n     * @param {Function} callback\n     * @returns {undefined}\n     */\n    MessageRouter.prototype.addListener = function (action, callback) {\n        this.map[action] = callback; // one action - one callback\n    };\n\n    return new MessageRouter();\n\n});\n\n\n","/* global chrome */\n\ndefine('background/localStorage',[\n], function(){\n    var ls = window.localStorage;\n    // handles local storage\n    function Storage(){\n\n    }\n\n    Storage.prototype.setItem = function(name, item, skipStringify){\n        try{\n            ls.setItem(name, skipStringify ? item : JSON.stringify(item));\n        }catch(err){\n            console.error('setItem fails', err);\n            return false;\n        }\n        return true;\n    };\n\n    Storage.prototype.getItem = function(name, skipParse){\n        var item;\n        try{\n            item = ls.getItem(name);\n            item = skipParse ? item : JSON.parse(item);\n        }catch(err){\n            console.error('setItem fails', err);\n            return false;\n        }\n        return item;\n    };\n\n    return new Storage();\n\n});\n\n\n","define('common/ExtMsgConstructor',[\n], function(){\n    function ExtMsgConstructor(config){\n        if (typeof config.action === 'undefined' || typeof config.data === 'undefined'){\n            throw 'Action and data properties are required';\n        }\n\n        this.action = config.action;\n        this.data = config.data;\n\n        if (this.action.indexOf(this.actionPrefix) < 0){\n            this.action = this.addPrefix(this.action);\n        }\n    }\n    ExtMsgConstructor.prototype.actionPrefix = 'ts_ext_';\n    ExtMsgConstructor.prototype.addPrefix = function(sourceStr){\n        var readyAction = sourceStr.indexOf(this.actionPrefix) < 0 ? (this.actionPrefix + sourceStr) : sourceStr;\n        return readyAction;\n    };\n\n    return ExtMsgConstructor;\n});\n","define('common/ActionsList',[\n    'common/ExtMsgConstructor'\n], function(msg){\n    var transform = msg.prototype.addPrefix.bind(msg.prototype);\n    var ActionsList = {\n        popup: {\n            startClick: transform('popupStartButton'),\n            needState: transform('popupNeedState'),\n            gotState: transform('popupGotState')\n        },\n        content: {\n            clipboardClick: transform('getTicketData'),\n            contextMenuClick: transform('getTicketDataByContextMenu'),\n            startTicketClick: transform('startTicketClick'),\n            gotTicketString: transform('hereIsTheTicketString')\n        },\n        state: {\n            need: transform('generalNeedState'),\n            got: transform('generalGotState')\n        },\n        workedTime: {\n            needUpdate: transform('pleaseUpdateWorkedTime')\n        }\n    };\n\n    return ActionsList;\n});\n","define('common/NotifModule',[\n], function(){\n    /**\n     * @class NotifModule\n     * @param {Object} config\n     */\n    function NotifModule(config){\n        config = config || {};\n        /**\n         * @cfg {Number} milliseconds to autoclose\n         */\n        this.defaultTimeout = config.timeout || 3000;\n        /**\n         * @cfg {String} path to icon\n         */\n        this.defaultIcon = config.icon || 'img/icon48.png';\n    }\n\n    /**\n     * Shows notif\n     * @param {Object} config\n     * @param {Number} [config.timeout] milliseconds to autoclose,\n     * if undefined - {@link NotifModule#defaultTimeout}\n     * @param {String} [config.title] Message title, default is ''\n     * @param {String} [config.body] Message body, default is ''\n     * @param {Boolean} [config.autoClose] Set to true to auto close notif after given or default timeout\n     * @return {Notification}\n     */\n    NotifModule.prototype.show = function(config){\n        config = config || {};\n        var n = new Notification(config.title || '', {\n            icon: this.defaultIcon,\n            body: config.body || ''\n        });\n        if (config.autoClose){\n            setTimeout(n.close.bind(n), this.defaultTimeout || config.timeout);\n        }\n        return n;\n    };\n\n    return new NotifModule();\n});\n","/* global chrome */\n\ndefine('background/state',[\n    'background/msgRouter',\n    'background/localStorage',\n    'common/ExtMsgConstructor',\n    'common/ActionsList',\n    'common/NotifModule'\n], function (msgRouter, ls, ExtensionMessage, ActionsList, Notif) {\n    // handles clicks on 'start' popup button (it may change its caption)\n    function State() {\n\n    }\n    // d is for data\n    State.prototype.d = {\n        started: false,\n        tickets: [],\n        username: ''\n    };\n\n    State.prototype.init = function () {\n        if (!this.__init) {\n            msgRouter.addListener(ActionsList.state.need, this.onMsgGetState.bind(this));\n            this.restoreState();\n            this.__init = true;\n        }\n        return this;\n    };\n\n    State.prototype.onMsgGetState = function (request, sender, sendResponse) {\n        sendResponse(this.getState());\n    };\n\n    /**\n     *\n     * @returns {Boolean} Current state after switch\n     */\n    State.prototype.toggleDayStart = function () {\n        var d = this.d;\n        if (d.started) {\n            d.started = false;\n            d.endTime = new Date().getTime();\n        } else {\n            d.started = true;\n            d.startTime = new Date().getTime();\n        }\n        this.setState();\n    };\n\n    State.prototype.startTicket = function (ticketData) {\n        // {id, queue, subject} - ticketData\n        if (!this.validateTicketData(ticketData)) {\n            return;\n        }\n        this.d.tickets = this.d.tickets || [];\n        var ticket, t;\n        t = ticketData;\n\n\n        // we'll start with having only one active ticket\n        /*\n         ticket = this.getTicketById(t.id);\n         if (ticket){\n            ticket.started = new Date().getTime();\n         }else{\n         ticket = {\n            id: t.id,\n            subject: t.subject,\n            queue: t.queue,\n            started: new Date().getTime()\n         };\n         this.d.tickets.push(ticket);\n         }\n         */\n\n        // implementation of single-ticket approach\n        this.d.tickets = []; // drop everything\n        ticket = {\n            id: t.id,\n            subject: t.subject,\n            queue: t.queue,\n            started: new Date().getTime()\n        };\n        this.d.tickets.push(ticket);\n\n        this.setState();\n        Notif.show({\n            title: 'Ticket started',\n            body: ticket.id + ': ' + ticket.subject,\n            autoClose: true\n        });\n        return ticket;\n    };\n\n    State.prototype.validateTicketData = function (data) {\n        return data.id && data.queue && data.subject;\n    };\n\n    State.prototype.getTicketById = function (id) {\n        this.d.tickets = this.d.tickets || [];\n        return this.d.tickets.filter(function (item) {\n            return item.id === id;\n        })[0];\n    };\n    /**\n     *\n     * @param {Object} opts\n     * @returns {Object} State\n     */\n    State.prototype.setOptions = function (opts) {\n        var d = this.d;\n        opts = opts || opts;\n        this.d.opts = opts;\n\n        this.setState();\n        return this.getState();\n    };\n\n    State.prototype.broadcastUpdateState = function () {\n        chrome.runtime.sendMessage(\n            new ExtensionMessage({\n                action: ActionsList.state.got,\n                data: {\n                    state: this.d\n                }\n            })\n        );\n    };\n\n    State.prototype.restoreState = function () {\n        var state = this.getState();\n        if (!!state) {\n            this.d = state;\n        }\n    };\n\n    State.prototype.setParam = function(name, value) {\n        this.d[name] = value;\n        this.setState();\n    };\n\n    State.prototype.getParam = function(name) {\n        return this.getState()[name];\n    };\n\n    State.prototype.setState = function() {\n        ls.setItem('state', this.d);\n        this.broadcastUpdateState();\n    };\n\n    State.prototype.getState = function() {\n        return ls.getItem('state') || {};\n    };\n\n    return new State().init();\n\n});\n\n\n","/* global chrome */\n\ndefine('background/user',[\n    'background/state'\n], function (state) {\n    function UserConstructor() {\n        this.name = '';\n        this.lastNameError = '';\n    }\n\n    UserConstructor.prototype.update = function (callback) {\n        $.ajax({\n            url: 'http://localhost:5555/user',\n            success: this.onUpdateUser.bind(this, callback),\n            error: this.onFailUpdateUser.bind(this, callback)\n        });\n    };\n\n    UserConstructor.prototype.onUpdateUser = function (callback, response, textStatus, xhr) {\n        if (!!response){\n            if ( response === '' ){\n                this.lastNameError = 'Empty name';\n                this.name = '';\n            }else{\n                this.lastNameError = '';\n                this.name = response;\n            }\n        }else{\n            this.lastNameError = 'unknown error';\n            this.name = '';\n        }\n        state.setParam('username', this.name);\n        state.setParam('usernameError', this.lastNameError);\n        if (callback && $.isFunction(callback)) {\n            callback(response, xhr, textStatus);\n        }\n    };\n\n    UserConstructor.prototype.onFailUpdateUser = function (callback, xhr, textStatus) {\n        this.lastNameError = 'error: ' + xhr.status;\n        this.name = '';\n        state.setParam('username', '');\n        state.setParam('usernameError', this.lastNameError);\n        if (callback && $.isFunction(callback)) {\n            callback(null, xhr, textStatus);\n        }\n    };\n\n    UserConstructor.prototype.getName = function () {\n        return state.getParam('username');\n    };\n\n    UserConstructor.prototype.getLastNameError = function () {\n        return state.getParam('usernameError');\n    };\n\n    return new UserConstructor();\n});\n\n\n","/* global chrome */\n\ndefine('common/dates',[\n], function(){\n    function Dates(){\n    }\n    Dates.prototype.weekdays = {\n        full: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ],\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ]\n    };\n    Dates.prototype.months = {\n        full: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'Decemeber'\n        ],\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ]\n    };\n    Dates.prototype.getFullDate = function (date, needSex) {\n        return this.getHumanDate(date) + ' ' + this.getHumanTime(date, needSex);\n    };\n\n    Dates.prototype.getHumanDate = function (date) {\n        var month, day, dateFormatted;\n        date = new Date(date.getTime());\n        month = this.xx( date.getMonth() + 1 );\n        day = this.xx( date.getDate() );\n        dateFormatted = date.getFullYear() + '-' + month + '-' + day;\n\n        return dateFormatted;\n    };\n\n    Dates.prototype.getHumanTime = function (date, needSex) {\n        var hours, mins, sex, dateFormatted;\n        hours = this.xx( date.getHours() );\n        mins = this.xx( date.getMinutes() );\n        sex = this.xx( date.getSeconds() ); // \"secs\" =)\n        dateFormatted = hours + ':' + mins + (needSex ? (':' + sex) : '');\n\n        return dateFormatted;\n    };\n    /**\n     * Two digits, '1' -> '01'\n     * @param {Number} value\n     * @returns {String}\n     */\n    Dates.prototype.xx = function (value) {\n        value = parseInt(value, 10);\n        return value < 10 ? '0' + value : (value + '');\n    };\n\n    Dates.prototype.getDayName = function(date, opts){\n        opts = opts || {};\n        var d = date || new Date();\n        return this.weekdays[opts.short ? 'short' : 'full'][d.getDay()];\n    };\n    Dates.prototype.getMonthName = function(date, opts){\n        opts = opts || {};\n        var d = date || new Date();\n        return this.months[opts.short ? 'short' : 'full'][d.getMonth()];\n    };\n\n\n    return new Dates();\n\n});\n\n\n","define('background/record',[\n    'common/dates'\n], function(dates){\n    function RecordMaker(){\n    }\n\n    RecordMaker.prototype.make = function(details){\n        var dateFormatted, date, month, day, endTime, startTime, hours, mins;\n        details.subject = this.sanitizeSubject(details.subject);\n        var textArr = [details.queue, details.id, details.subject];\n\n        textArr[1] = 'RT:' + textArr[1];\n        textArr[2] = '\"' + textArr[2] + '\"';\n        date = new Date();\n        dateFormatted = dates.getHumanDate(date);\n\n        endTime = dates.getHumanTime(date);\n\n        date.setHours(10);\n        date.setMinutes(0);\n\n        startTime = dates.getHumanTime(date);\n\n        textArr.unshift(endTime);\n        textArr.unshift(startTime);\n        textArr.unshift(dateFormatted);\n\n        textArr = textArr.join(',');\n\n        this.copy(textArr);\n        return textArr;\n    };\n\n    RecordMaker.prototype.copy = function(text){\n        var copyDiv = document.createElement('div');\n        copyDiv.contentEditable = true;\n        document.body.appendChild(copyDiv);\n        copyDiv.innerHTML = text;\n        copyDiv.unselectable = \"off\";\n        copyDiv.focus();\n        document.execCommand('SelectAll');\n        document.execCommand(\"Copy\", false, null);\n        document.body.removeChild(copyDiv);\n    };\n\n    RecordMaker.prototype.sanitizeSubject = function(before){\n        var after;\n\n        after = before.replace(/\"/gim, '\\'');\n        return after;\n    };\n\n    return new RecordMaker();\n});\n","/* global chrome */\n\ndefine('background/clickHandler',[\n    'background/record',\n    'common/ExtMsgConstructor',\n    'common/ActionsList'\n], function (record, ExtensionMessage, ActionsList) {\n    chrome.contextMenus.create(\n        {\n            title: 'Form TS rec and ctrl+C',\n            contexts: [\"page\", \"selection\"],\n            onclick: onItemClick\n        }\n    );\n\n    // context menu click handler\n    function onItemClick(info, tab) {\n        chrome.tabs.sendMessage(\n            tab.id,\n            new ExtensionMessage({\n                action: ActionsList.content.contextMenuClick,\n                data: ''\n            }),\n            onGetDetails.bind(this, info)\n        );\n    }\n\n    function onGetDetails(info, details) {\n        details = details || {};\n        record.make(details);\n    }\n});\n","/* global module, define */\n(function () {\n    function moduleDefiniton() {\n        /**\n         * Manage RT with its REST API\n         * @class RT\n         * @param {Object} [cfg]\n         * @param {String} [cfg.url]\n         * @singleton\n         */\n        function RT(cfg) {\n\n            function init() {\n                this.url = cfg.url || this.url; // always put a property in instance, I wanna see it in console\n                this.debug = typeof cfg.debug !== 'undefined' ? cfg.debug : this.debug;\n            }\n\n            /**\n             *\n             * @param {Number|String} id\n             * @param {Function} [callback]\n             * callback param:\n             *      {\n             *          success: true,\n             *          ticketData: {\n             *              id: \"1\",\n             *              owner: \"you\"\n             *          },\n             *          errorText: \"\"\n             *      }\n             * @return {undefined}\n             */\n            this.getTicket = function (id, callback) {\n                var fullUrl;\n                fullUrl = this.url + this.getTicketPattern.replace('%id%', id);\n                this.ajax({\n                    method: 'POST',\n                    url: fullUrl,\n                    success: this.onGetTicket.bind(this, callback),\n                    error: this.onGetTicketError.bind(this, callback)\n                });\n            };\n\n            return init.call(this);\n        }\n\n\n        var protoStuff = {\n            /**\n             * @param {String}\n             */\n            url: 'http://rt.easter-eggs.org/demos/4.2/',\n            getTicketPattern: 'ticket/%id%/show',\n            debug: true,\n            /**\n             * Custom AJAX function, implement it yourself if wanna be jquery-independent\n             */\n            nonJqueryAjax: null,\n            onGetTicket: function (callback, res) {\n                var parsedRes = this.parseResponse(res);\n\n                if (!parsedRes.success){\n                    this.debug && console.error('Error getting ticket data: ', parsedRes.errorText || '<No error text>');\n                }else if ( callback && typeof callback === 'function' ){\n                    callback(parsedRes); // assuming scope and everything is bound already\n                }\n            },\n            onGetTicketError: function (callback, res) {\n                var errorText = res.statusText || '<No error text>';\n                this.debug && console.error('Error getting ticket data: ', errorText, ' Status: ' + res.status);\n\n                if ( callback && typeof callback === 'function' ){\n                    callback({\n                        success: false,\n                        data: {},\n                        errorText: errorText\n                    });\n                }\n            },\n            parseResponse: function(ticketResponse){\n                var r, statusLine, emptyLine, possibleErrorLine, data, line, success, errorText;\n                data = {};\n                success = true;\n                errorText ='';\n                r = ticketResponse;\n                r = r.split('\\n');\n\n                statusLine = r.shift();\n                emptyLine = r.shift();\n                possibleErrorLine = r[0];\n\n                if (!statusLine || statusLine.toLowerCase().indexOf('200 ok') < 0 || emptyLine !== ''){\n                    errorText = 'Something went wrong, incorrect server answer structure.';\n                    success = false;\n                }else if ( possibleErrorLine && possibleErrorLine.indexOf('#') === 0 ){\n                    possibleErrorLine = possibleErrorLine.replace('#', '').replace(/^\\s+/gim, '');\n                    errorText = possibleErrorLine;\n                    success = false;\n                }else{\n                    for (var i = 0; i < r.length; i++){\n                        line = r[i];\n                        if (line !== '' && !!line && line.indexOf(': ')){\n                            line = line.split(': ');\n                            if ( line.length >= 2 ){\n                                if (line[0] === 'id'){\n                                    line[1] = line[1].replace('ticket/', '');\n                                }\n                                data[line.shift().toLowerCase()] = line.join(':');\n                            }\n                        }\n                    }\n                }\n\n                return {\n                    success: success,\n                    errorText: errorText,\n                    ticketData: data\n                };\n            },\n            ajax: function(ajaxParams){\n                if (this.nonJqueryAjax){\n                    return this.nonJqueryAjax(ajaxParams);\n                }else{\n                    return $.ajax(ajaxParams);\n                }\n            }\n        };\n\n        for (var stuffName in protoStuff) {\n            if (typeof protoStuff[stuffName] === 'function') {\n                RT.prototype[stuffName] = protoStuff[stuffName].bind(RT.prototype);\n            } else {\n                RT.prototype[stuffName] = protoStuff[stuffName];\n            }\n        }\n\n        return RT;\n    }\n\n    if (typeof define === \"function\" && define.amd) {\n        define('background/rt',[], moduleDefiniton);\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = moduleDefiniton;\n    } else {\n        window['RTIConstructor'] = moduleDefiniton();\n    }\n})();\n","/* global chrome */\n\ndefine('background/listenContent',[\n    'background/record',\n    'background/msgRouter',\n    'background/state',\n    'background/rt',\n    'common/ExtMsgConstructor',\n    'common/ActionsList'\n], function(record, msgRouter, state, RTConstructor, ExtensionMessage, ActionsList){\n    msgRouter.addListener(ActionsList.content.clipboardClick, createSomethingByTicketData);\n    msgRouter.addListener(ActionsList.content.startTicketClick, createSomethingByTicketData);\n    var RT = new RTConstructor({\n        url: 'https://www.iponweb.net/rt/REST/1.0/'\n    });\n\n    function makeRecord(ticketData){\n        return record.make.apply(record, [ticketData]);\n    }\n\n    function startTicket(ticketData){\n        return state.startTicket(ticketData);\n    }\n\n    /**\n     * General function, must be bound with sender tab id and keyFunction\n     * it receives ticket data from RT as 3rd argument, calls keyFunction method and\n     * returns result via chome message into the sender tab by its id\n     * @param {Number|String} senderTabId\n     * @param {Function} keyFunction\n     * @param {Object} ticketResponse\n     * @returns {undefined}\n     */\n    function makeAnswer(senderTabId, keyFunction, ticketResponse){\n        var result = {};\n        ticketResponse = ticketResponse || {};\n        if ( ticketResponse.success && ticketResponse.ticketData){\n            try{\n                result = keyFunction(ticketResponse.ticketData);\n            }catch(err){\n                console.error('Error while running keyFunction inside makeAnswer', err);\n            }\n            chrome.tabs.sendMessage(\n                senderTabId,\n                new ExtensionMessage({\n                    action: ActionsList.content.gotTicketString,\n                    data: result\n                })\n            );\n        }\n    }\n\n    function createSomethingByTicketData(request, sender){\n        var keyFunction;\n        if (!request.data || !request.data.id){\n            throw 'Ticket ID is required to get ticket info from RT';\n        }\n        switch(request.action){\n            case ActionsList.content.clipboardClick:\n                keyFunction = makeRecord;\n                break;\n            case ActionsList.content.startTicketClick:\n                keyFunction = startTicket;\n                break;\n        }\n        RT.getTicket(request.data.id, makeAnswer.bind(this, sender.tab.id, keyFunction));\n    }\n});\n\n\n","/* global chrome */\n\ndefine('common/BadgeModule',[\n], function(){\n    /**\n     * @class BadgeModule\n     */\n    function BadgeModule(){\n        /**\n         * @cfg {String}\n         */\n        this.defaultText = '';\n        /**\n         * @cfg {String}\n         */\n        this.defaultTitle = '';\n        /**\n         * @cfg {String}\n         */\n        this.defaultBgColor = '#6D0073'; // dark-violet\n        /**\n         * @cfg {String} While extension is loading or updating something inside badge\n         */\n        this.loadingBgColor = '#666666';\n        /**\n         * @cfg {String} color for \"bad\" things\n         */\n        this.finalRedColor = '#DF0500';\n        /**\n         * @cfg {String} color for \"good\" things\n         */\n        this.finalGreenColor = '#00910D';\n        /**\n         * @cfg {String} Prefix for badge title to display detailed text of worked time\n         */\n        this.detailedTemplate = 'Worked/total :: ';\n    }\n\n    BadgeModule.prototype.setLoading = function(){\n        this.setBadge({\n            text: '...',\n            title: 'Updating...',\n            bgColor: this.loadingBgColor\n        });\n    };\n\n    BadgeModule.prototype.setOverWorked = function(amount, detailed){\n        this.setWorked(amount, detailed, this.finalGreenColor);\n    };\n\n    BadgeModule.prototype.setUnderWorked = function(amount, detailed){\n        this.setWorked(amount, detailed, this.finalRedColor);\n    };\n\n    BadgeModule.prototype.setWorked = function(amount, detailed, color){\n        this.setBadge({\n            text: amount + '',\n            title: this.detailedTemplate + detailed,\n            bgColor: color\n        });\n    };\n\n    /**\n     * Shows notif\n     * @param {Object} config\n     * @param {Number} [config.text] text on badge (very limited, around 4 characters)\n     * @param {String} [config.title] title which is displayed on hover\n     * @param {String} [config.bgColor] a background color <b>for the badge text</b>\n     */\n    BadgeModule.prototype.setBadge = function(config){\n        config = config || {};\n        chrome.browserAction.setBadgeText({\n            text: config.text || this.defaultText\n        });\n        chrome.browserAction.setTitle({\n            title: config.title || this.defaultTitle\n        });\n        chrome.browserAction.setBadgeBackgroundColor({\n            color: config.bgColor || this.defaultBgColor\n        });\n    };\n\n    return new BadgeModule();\n});\n","/* global chrome */\n\ndefine('background/popupController',[\n    'common/dates',\n    'background/state',\n    'background/user',\n    'common/ExtMsgConstructor',\n    'common/BadgeModule'\n], function (Dates, state, User, ExtMessage, Badge) {\n    function PopupController() {\n\n    }\n\n    PopupController.prototype.onStartClick = function (request, sender, sendResponse) {\n        state.toggleDayStart();\n        sendResponse(state.d);\n    };\n    PopupController.prototype.getWorkedTime = function () {\n        this.worked = {\n            loading: true\n        };\n        state.setParam('workedTime', this.worked);\n        Badge.setLoading();\n        User.update(\n            this._sendWorkedTimeRequest.bind(this)\n        );\n    };\n\n    PopupController.prototype._sendWorkedTimeRequest = function (userName) {\n        var timesheetUrl = 'https://www.iponweb.net/twiki/bin/view/IPonweb/Timesheet';\n        var today = new Date();\n        timesheetUrl += Dates.getMonthName(today) + today.getFullYear();\n        $.ajax({\n            method: 'GET',\n            url: timesheetUrl,\n            timeout: 10000,\n            success: this._onGetWorkedTime.bind(this, userName),\n            error: this._onFailedGetWorkedTime.bind(this)\n        });\n    };\n\n    PopupController.prototype._onGetWorkedTime = function (userName, res) {\n        if (!res) {\n            console.error('Empty worked time response');\n        }\n        //April2016 (Working hours - 168)\n        var s, rest, total, worked, restSuffix;\n        s = res;\n        total = s.match(/April2016 \\(Working hours - (\\d+)\\)/);\n        total = total && total.length > 0 && total[1] || 'unknown';\n        worked = s\n            .substring(s.indexOf(userName)) // to reduce length and set starting point for an array\n            .split('\\n')\n            .splice(0, 3)[2];\n        worked = worked.replace(/\\s\\s+|<td\\s.+?>|<\\/td>/gim, '').replace(/\\s/gim, '');\n        worked = parseFloat(worked);\n\n        if (total && total !== 'unknown' && !isNaN(worked)) {\n            rest = total - worked;\n            restSuffix = rest > 0 ? ('(' + rest.toFixed(1) + 'h left)') : ('(' + rest + 'h overworked)');\n            this.workedTimeStr = worked + '/' + total + ' ' + restSuffix;\n            rest = parseFloat( rest.toFixed(1) );\n\n            if (rest > 0) {\n                Badge.setUnderWorked('-' + rest, this.workedTimeStr);\n            } else {\n                Badge.setOverWorked('+' + rest, this.workedTimeStr);\n            }\n            this.worked = {\n                worked: parseFloat(worked),\n                total: parseFloat(total),\n                rest: rest,\n                str: this.workedTimeStr\n            };\n        }else{\n            console.error('Error in worked time calculation, something has gone wrong');\n            this.worked = {\n                str: 'Error'\n            };\n        }\n        state.setParam('workedTime', this.worked);\n    };\n\n    PopupController.prototype._onFailedGetWorkedTime = function (res) {\n        this.worked = {\n            worked: 0,\n            total: 0,\n            rest: 0,\n            str: 'fail'\n        };\n        state.setParam('workedTime', this.worked);\n        console.error('Failed to get worked time', res);\n    };\n\n    return new PopupController();\n});\n\n\n","/* global chrome */\n\ndefine('background/listenPopup',[\n    'background/msgRouter',\n    'background/popupController',\n    'common/ActionsList'\n], function(msgRouter, popupController, ActionsList){\n    msgRouter.addListener(\n        ActionsList.popup.startClick,\n        popupController.onStartClick.bind(popupController)\n    );\n    msgRouter.addListener(\n        ActionsList.workedTime.needUpdate,\n        popupController.getWorkedTime.bind(popupController)\n    );\n\n    return {\n        popupController: popupController\n    };\n});\n\n\n","/* global chrome */\n\ndefine('background/listenOptions',[\n    'background/msgRouter',\n    'background/state'\n], function(msgRouter, state){\n    msgRouter.addListener('setOptions', setOptions);\n\n    function setOptions(request){\n        try{\n            state.setOptions(request.opts);\n        }catch(err){\n            // and what?, TODO\n        }\n    }\n\n});\n\n\n","/**\n * This is the main JS file for background script, it is a subject to grunt's build routine.\n */\n\nrequire([\n    'background/user',\n    'background/clickHandler',\n    'background/listenContent',\n    'background/listenPopup',\n    'background/listenOptions'\n], function(User, clickHandler, listenContent, listenPopup, listenOptions){\n    var bg = new BackGround();\n    User.update(bg.onGotName.bind(bg));\n\n    function BackGround(){\n        this.onGotName = function(a){\n            console.log( 'User name: ', User.getName() || User.getLastNameError());\n            listenPopup.popupController.getWorkedTime();\n        };\n    }\n});\n\ndefine(\"BackgroundMain\", function(){});\n\n"]}