{"version":3,"file":"ext.min.js","sources":["background/msgRouter.js","background/localStorage.js","common/ExtMsgConstructor.js","common/ActionsList.js","background/state.js","background/user.js","common/dates.js","background/record.js","background/clickHandler.js","background/rt.js","background/listenContent.js","background/popupController.js","background/listenPopup.js","background/listenOptions.js","BackgroundMain.js"],"names":["define","MessageRouter","chrome","runtime","onMessage","addListener","this","messageListener","bind","add","a","b","prototype","map","request","sender","sendResponse","action","err","console","warn","callback","Storage","ls","window","localStorage","setItem","name","item","skipStringify","JSON","stringify","error","getItem","skipParse","parse","ExtMsgConstructor","config","data","indexOf","actionPrefix","addPrefix","sourceStr","readyAction","msg","transform","ActionsList","popup","startClick","needState","gotState","content","clipboardClick","contextMenuClick","startTicketClick","gotTicketString","state","need","got","workedTime","needUpdate","msgRouter","ExtensionMessage","State","d","started","tickets","username","init","__init","onMsgGetState","restoreState","getState","toggleDayStart","endTime","Date","getTime","startTime","setState","startTicket","contentPageData","validateTicketData","ticket","t","id","subject","queue","push","n","Notification","icon","body","setTimeout","close","getTicketById","filter","setOptions","opts","broadcastUpdateState","sendMessage","setParam","value","getParam","UserConstructor","lastNameError","update","$","ajax","url","success","onUpdateUser","onFailUpdateUser","response","textStatus","xhr","isFunction","status","getName","getLastNameError","Dates","weekdays","full","short","months","getFullDate","date","needSex","getHumanDate","getHumanTime","month","day","dateFormatted","xx","getMonth","getDate","getFullYear","hours","mins","sex","getHours","getMinutes","getSeconds","parseInt","getDayName","getDay","getMonthName","dates","RecordMaker","make","details","sanitizeSubject","textArr","setHours","setMinutes","unshift","join","copy","text","copyDiv","document","createElement","contentEditable","appendChild","innerHTML","unselectable","focus","execCommand","removeChild","before","after","replace","record","onItemClick","info","tab","tabs","onGetDetails","contextMenus","create","title","contexts","onclick","moduleDefiniton","RT","cfg","debug","getTicket","fullUrl","getTicketPattern","method","onGetTicket","onGetTicketError","call","protoStuff","nonJqueryAjax","res","parsedRes","parseResponse","errorText","statusText","ticketResponse","r","statusLine","emptyLine","possibleErrorLine","line","split","shift","toLowerCase","i","length","ticketData","ajaxParams","stuffName","amd","module","exports","RTConstructor","makeRecordRemote","ticketDataFromContent","makeRemoteAnswer","senderTabId","getTicketResponse","recordString","apply","User","ExtMessage","PopupController","onStartClick","getWorkedTime","_sendWorkedTimeRequest","userName","timeout","_onGetWorkedTime","_onFailedGetWorkedTime","s","rest","total","worked","color","restString","match","substring","splice","parseFloat","isNaN","toFixed","workedTimeStr","str","browserAction","setBadgeText","String","setTitle","setBadgeBackgroundColor","popupController","require","BackGround","logName","log","bg"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrzGA,AD0GA;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA,ADsDA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClJA,ADmJA;ACljBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA,ADmBA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* global chrome */\n\ndefine('background/msgRouter',[\n], function(){\n    function MessageRouter(){\n        chrome.runtime.onMessage.addListener(this.messageListener.bind(this));\n\n        this.add = function(a,b){\n            this[a] = b;\n        };\n    }\n\n    // one action - one callback\n    MessageRouter.prototype.map = {};\n\n    /**\n     * Function, which handles messages\n     * @param {Object} request POJO with required 'action' property\n     * @param {String} request.action\n     * @param {Object} sender Chrome tab\n     * @param {Function} sendResponse Call special function, which is waiting for an answer\n     * @returns {undefined}\n     */\n    MessageRouter.prototype.messageListener = function (request, sender, sendResponse) {\n        try{\n            var action = request.action;\n            if ( this.map[action] && typeof this.map[action] === 'function' ){\n                this.map[action](request, sender, sendResponse); // provide already bound functions if needed\n            }\n        }catch(err){\n            console.warn('Message processing has failed. Let the developer know about that.' + err);\n        }\n    };\n\n    /**\n     * Add one association \"action->handler\", which is checked with every\n     * message came\n     * @param {String} action\n     * @param {Function} callback\n     * @returns {undefined}\n     */\n    MessageRouter.prototype.addListener = function (action, callback) {\n        this.map[action] = callback; // one action - one callback\n    };\n\n    return new MessageRouter();\n\n});\n\n\n","/* global chrome */\n\ndefine('background/localStorage',[\n], function(){\n    var ls = window.localStorage;\n    // handles local storage\n    function Storage(){\n\n    }\n\n    Storage.prototype.setItem = function(name, item, skipStringify){\n        try{\n            ls.setItem(name, skipStringify ? item : JSON.stringify(item));\n        }catch(err){\n            console.error('setItem fails', err);\n            return false;\n        }\n        return true;\n    };\n\n    Storage.prototype.getItem = function(name, skipParse){\n        var item;\n        try{\n            item = ls.getItem(name);\n            item = skipParse ? item : JSON.parse(item);\n        }catch(err){\n            console.error('setItem fails', err);\n            return false;\n        }\n        return item;\n    };\n\n    return new Storage();\n\n});\n\n\n","define('common/ExtMsgConstructor',[\n], function(){\n    function ExtMsgConstructor(config){\n        if (typeof config.action === 'undefined' || typeof config.data === 'undefined'){\n            throw 'Action and data properties are required';\n        }\n\n        this.action = config.action;\n        this.data = config.data;\n\n        if (this.action.indexOf(this.actionPrefix) < 0){\n            this.action = this.addPrefix(this.action);\n        }\n    }\n    ExtMsgConstructor.prototype.actionPrefix = 'ts_ext_';\n    ExtMsgConstructor.prototype.addPrefix = function(sourceStr){\n        var readyAction = sourceStr.indexOf(this.actionPrefix) < 0 ? (this.actionPrefix + sourceStr) : sourceStr;\n        return readyAction;\n    };\n\n    return ExtMsgConstructor;\n});\n","define('common/ActionsList',[\n    'common/ExtMsgConstructor'\n], function(msg){\n    var transform = msg.prototype.addPrefix.bind(msg.prototype);\n    var ActionsList = {\n        popup: {\n            startClick: transform('popupStartButton'),\n            needState: transform('popupNeedState'),\n            gotState: transform('popupGotState')\n        },\n        content: {\n            clipboardClick: transform('getTicketData'),\n            contextMenuClick: transform('getTicketDataByContextMenu'),\n            startTicketClick: transform('startTicketClick'),\n            gotTicketString: transform('hereIsTheTicketString')\n        },\n        state: {\n            need: transform('generalNeedState'),\n            got: transform('generalGotState')\n        },\n        workedTime: {\n            needUpdate: transform('pleaseUpdateWorkedTime')\n        }\n    };\n\n    return ActionsList;\n});\n","/* global chrome */\n\ndefine('background/state',[\n    'background/msgRouter',\n    'background/localStorage',\n    'common/ExtMsgConstructor',\n    'common/ActionsList'\n], function (msgRouter, ls, ExtensionMessage, ActionsList) {\n    // handles clicks on 'start' popup button (it may change its caption)\n    function State() {\n\n    }\n    // d is for data\n    State.prototype.d = {\n        started: false,\n        tickets: [],\n        username: ''\n    };\n\n    State.prototype.init = function () {\n        if (!this.__init) {\n            msgRouter.addListener(ActionsList.state.need, this.onMsgGetState.bind(this));\n            this.restoreState();\n            this.__init = true;\n        }\n        return this;\n    };\n\n    State.prototype.onMsgGetState = function (request, sender, sendResponse) {\n        sendResponse(this.getState());\n    };\n\n    /**\n     *\n     * @returns {Boolean} Current state after switch\n     */\n    State.prototype.toggleDayStart = function () {\n        var d = this.d;\n        if (d.started) {\n            d.started = false;\n            d.endTime = new Date().getTime();\n        } else {\n            d.started = true;\n            d.startTime = new Date().getTime();\n        }\n        this.setState();\n    };\n\n    State.prototype.startTicket = function (contentPageData) {\n        if (!this.validateTicketData(contentPageData)) {\n            return;\n        }\n        this.d.tickets = this.d.tickets || [];\n        var ticket, t;\n        t = contentPageData;\n\n\n        // we'll start with having only one active ticket\n        /*\n         ticket = this.getTicketById(t.id);\n         if (ticket){\n            ticket.started = new Date().getTime();\n         }else{\n         ticket = {\n            id: t.id,\n            subject: t.subject,\n            queue: t.queue,\n            started: new Date().getTime()\n         };\n         this.d.tickets.push(ticket);\n         }\n         */\n\n        // implementation of single-ticket approach\n        this.d.tickets = []; // drop everything\n        ticket = {\n            id: t.id,\n            subject: t.subject,\n            queue: t.queue,\n            started: new Date().getTime()\n        };\n        this.d.tickets.push(ticket);\n\n        this.setState();\n\n        var n = new Notification('Ticket started', {\n            icon: 'img/icon48.png',\n            body: ticket.id + ': ' + ticket.subject\n        });\n        setTimeout(n.close.bind(n), 3000);\n        return ticket;\n    };\n\n    State.prototype.validateTicketData = function (data) {\n        return data.id && data.queue && data.subject;\n    };\n\n    State.prototype.getTicketById = function (id) {\n        this.d.tickets = this.d.tickets || [];\n        return this.d.tickets.filter(function (item) {\n            return item.id === id;\n        })[0];\n    };\n    /**\n     *\n     * @param {Object} opts\n     * @returns {Object} State\n     */\n    State.prototype.setOptions = function (opts) {\n        var d = this.d;\n        opts = opts || opts;\n        this.d.opts = opts;\n\n        this.setState();\n        return this.getState();\n    };\n\n    State.prototype.broadcastUpdateState = function () {\n        chrome.runtime.sendMessage(\n            new ExtensionMessage({\n                action: ActionsList.state.got,\n                data: {\n                    state: this.d\n                }\n            })\n        );\n    };\n\n    State.prototype.restoreState = function () {\n        var state = this.getState();\n        if (!!state) {\n            this.d = state;\n        }\n    };\n\n    State.prototype.setParam = function(name, value) {\n        this.d[name] = value;\n        this.setState();\n    };\n\n    State.prototype.getParam = function(name) {\n        return this.getState()[name];\n    };\n\n    State.prototype.setState = function() {\n        ls.setItem('state', this.d);\n        this.broadcastUpdateState();\n    };\n\n    State.prototype.getState = function() {\n        return ls.getItem('state') || {};\n    };\n\n    return new State().init();\n\n});\n\n\n","/* global chrome */\n\ndefine('background/user',[\n    'background/state'\n], function (state) {\n    function UserConstructor() {\n        this.name = '';\n        this.lastNameError = '';\n    }\n\n    UserConstructor.prototype.update = function (callback) {\n        $.ajax({\n            url: 'http://localhost:5555/user',\n            success: this.onUpdateUser.bind(this, callback),\n            error: this.onFailUpdateUser.bind(this, callback)\n        });\n    };\n\n    UserConstructor.prototype.onUpdateUser = function (callback, response, textStatus, xhr) {\n        if (!!response){\n            if ( response === '' ){\n                this.lastNameError = 'Empty name';\n                this.name = '';\n            }else{\n                this.lastNameError = '';\n                this.name = response;\n            }\n        }else{\n            this.lastNameError = 'unknown error';\n            this.name = '';\n        }\n        state.setParam('username', this.name);\n        state.setParam('usernameError', this.lastNameError);\n        if (callback && $.isFunction(callback)) {\n            callback(response, xhr, textStatus);\n        }\n    };\n\n    UserConstructor.prototype.onFailUpdateUser = function (callback, xhr, textStatus) {\n        this.lastNameError = 'error: ' + xhr.status;\n        this.name = '';\n        state.setParam('username', '');\n        state.setParam('usernameError', this.lastNameError);\n        if (callback && $.isFunction(callback)) {\n            callback(null, xhr, textStatus);\n        }\n    };\n\n    UserConstructor.prototype.getName = function () {\n        return state.getParam('username');\n    };\n\n    UserConstructor.prototype.getLastNameError = function () {\n        return state.getParam('usernameError');\n    };\n\n    return new UserConstructor();\n});\n\n\n","/* global chrome */\n\ndefine('common/dates',[\n], function(){\n    function Dates(){\n    }\n    Dates.prototype.weekdays = {\n        full: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ],\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ]\n    };\n    Dates.prototype.months = {\n        full: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'Decemeber'\n        ],\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ]\n    };\n    Dates.prototype.getFullDate = function (date, needSex) {\n        return this.getHumanDate(date) + ' ' + this.getHumanTime(date, needSex);\n    };\n\n    Dates.prototype.getHumanDate = function (date) {\n        var month, day, dateFormatted;\n        date = new Date(date.getTime());\n        month = this.xx( date.getMonth() + 1 );\n        day = this.xx( date.getDate() );\n        dateFormatted = date.getFullYear() + '-' + month + '-' + day;\n\n        return dateFormatted;\n    };\n\n    Dates.prototype.getHumanTime = function (date, needSex) {\n        var hours, mins, sex, dateFormatted;\n        hours = this.xx( date.getHours() );\n        mins = this.xx( date.getMinutes() );\n        sex = this.xx( date.getSeconds() ); // \"secs\" =)\n        dateFormatted = hours + ':' + mins + (needSex ? (':' + sex) : '');\n\n        return dateFormatted;\n    };\n    /**\n     * Two digits, '1' -> '01'\n     * @param {Number} value\n     * @returns {String}\n     */\n    Dates.prototype.xx = function (value) {\n        value = parseInt(value, 10);\n        return value < 10 ? '0' + value : (value + '');\n    };\n\n    Dates.prototype.getDayName = function(date, opts){\n        opts = opts || {};\n        var d = date || new Date();\n        return this.weekdays[opts.short ? 'short' : 'full'][d.getDay()];\n    };\n    Dates.prototype.getMonthName = function(date, opts){\n        opts = opts || {};\n        var d = date || new Date();\n        return this.months[opts.short ? 'short' : 'full'][d.getMonth()];\n    };\n\n\n    return new Dates();\n\n});\n\n\n","define('background/record',[\n    'common/dates'\n], function(dates){\n    function RecordMaker(){\n    }\n\n    RecordMaker.prototype.make = function(details){\n        var dateFormatted, date, month, day, endTime, startTime, hours, mins;\n        details.subject = this.sanitizeSubject(details.subject);\n        var textArr = [details.queue, details.id, details.subject];\n\n        textArr[1] = 'RT:' + textArr[1];\n        textArr[2] = '\"' + textArr[2] + '\"';\n        date = new Date();\n        dateFormatted = dates.getHumanDate(date);\n\n        endTime = dates.getHumanTime(date);\n\n        date.setHours(10);\n        date.setMinutes(0);\n\n        startTime = dates.getHumanTime(date);\n\n        textArr.unshift(endTime);\n        textArr.unshift(startTime);\n        textArr.unshift(dateFormatted);\n\n        textArr = textArr.join(',');\n\n        this.copy(textArr);\n        return textArr;\n    };\n\n    RecordMaker.prototype.copy = function(text){\n        var copyDiv = document.createElement('div');\n        copyDiv.contentEditable = true;\n        document.body.appendChild(copyDiv);\n        copyDiv.innerHTML = text;\n        copyDiv.unselectable = \"off\";\n        copyDiv.focus();\n        document.execCommand('SelectAll');\n        document.execCommand(\"Copy\", false, null);\n        document.body.removeChild(copyDiv);\n    };\n\n    RecordMaker.prototype.sanitizeSubject = function(before){\n        var after;\n\n        after = before.replace(/\"/gim, '\\'');\n        return after;\n    };\n\n    return new RecordMaker();\n});\n","/* global chrome */\n\ndefine('background/clickHandler',[\n    'background/record',\n    'common/ExtMsgConstructor',\n    'common/ActionsList'\n], function (record, ExtensionMessage, ActionsList) {\n    chrome.contextMenus.create(\n        {\n            title: 'Form TS rec and ctrl+C',\n            contexts: [\"page\", \"selection\"],\n            onclick: onItemClick\n        }\n    );\n\n    // context menu click handler\n    function onItemClick(info, tab) {\n        chrome.tabs.sendMessage(\n            tab.id,\n            new ExtensionMessage({\n                action: ActionsList.content.contextMenuClick,\n                data: ''\n            }),\n            onGetDetails.bind(this, info)\n        );\n    }\n\n    function onGetDetails(info, details) {\n        details = details || {};\n        record.make(details);\n    }\n});\n","/* global module, define */\n(function () {\n    function moduleDefiniton() {\n        /**\n         * Manage RT with its REST API\n         * @class RT\n         * @param {Object} [cfg]\n         * @param {String} [cfg.url]\n         * @singleton\n         */\n        function RT(cfg) {\n\n            function init() {\n                this.url = cfg.url || this.url; // always put a property in instance, I wanna see it in console\n                this.debug = typeof cfg.debug !== 'undefined' ? cfg.debug : this.debug;\n            }\n\n            /**\n             *\n             * @param {Number|String} id\n             * @param {Function} [callback]\n             * callback param:\n             *      {\n             *          success: true,\n             *          ticketData: {\n             *              id: \"1\",\n             *              owner: \"you\"\n             *          },\n             *          errorText: \"\"\n             *      }\n             * @return {undefined}\n             */\n            this.getTicket = function (id, callback) {\n                var fullUrl;\n                fullUrl = this.url + this.getTicketPattern.replace('%id%', id);\n                this.ajax({\n                    method: 'POST',\n                    url: fullUrl,\n                    success: this.onGetTicket.bind(this, callback),\n                    error: this.onGetTicketError.bind(this, callback)\n                });\n            };\n\n            return init.call(this);\n        }\n\n\n        var protoStuff = {\n            /**\n             * @param {String}\n             */\n            url: 'http://rt.easter-eggs.org/demos/4.2/',\n            getTicketPattern: 'ticket/%id%/show',\n            debug: true,\n            /**\n             * Custom AJAX function, implement it yourself if wanna be jquery-independent\n             */\n            nonJqueryAjax: null,\n            onGetTicket: function (callback, res) {\n                var parsedRes = this.parseResponse(res);\n\n                if (!parsedRes.success){\n                    this.debug && console.error('Error getting ticket data: ', parsedRes.errorText || '<No error text>');\n                }else if ( callback && typeof callback === 'function' ){\n                    callback(parsedRes); // assuming scope and everything is bound already\n                }\n            },\n            onGetTicketError: function (callback, res) {\n                var errorText = res.statusText || '<No error text>';\n                this.debug && console.error('Error getting ticket data: ', errorText, ' Status: ' + res.status);\n\n                if ( callback && typeof callback === 'function' ){\n                    callback({\n                        success: false,\n                        data: {},\n                        errorText: errorText\n                    });\n                }\n            },\n            parseResponse: function(ticketResponse){\n                var r, statusLine, emptyLine, possibleErrorLine, data, line, success, errorText;\n                data = {};\n                success = true;\n                errorText ='';\n                r = ticketResponse;\n                r = r.split('\\n');\n\n                statusLine = r.shift();\n                emptyLine = r.shift();\n                possibleErrorLine = r[0];\n\n                if (!statusLine || statusLine.toLowerCase().indexOf('200 ok') < 0 || emptyLine !== ''){\n                    errorText = 'Something went wrong, incorrect server answer structure.';\n                    success = false;\n                }else if ( possibleErrorLine && possibleErrorLine.indexOf('#') === 0 ){\n                    possibleErrorLine = possibleErrorLine.replace('#', '').replace(/^\\s+/gim, '');\n                    errorText = possibleErrorLine;\n                    success = false;\n                }else{\n                    for (var i = 0; i < r.length; i++){\n                        line = r[i];\n                        if (line !== '' && !!line && line.indexOf(': ')){\n                            line = line.split(': ');\n                            if ( line.length >= 2 ){\n                                if (line[0] === 'id'){\n                                    line[1] = line[1].replace('ticket/', '');\n                                }\n                                data[line.shift().toLowerCase()] = line.join(':');\n                            }\n                        }\n                    }\n                }\n\n                return {\n                    success: success,\n                    errorText: errorText,\n                    ticketData: data\n                };\n            },\n            ajax: function(ajaxParams){\n                if (this.nonJqueryAjax){\n                    return this.nonJqueryAjax(ajaxParams);\n                }else{\n                    return $.ajax(ajaxParams);\n                }\n            }\n        };\n\n        for (var stuffName in protoStuff) {\n            if (typeof protoStuff[stuffName] === 'function') {\n                RT.prototype[stuffName] = protoStuff[stuffName].bind(RT.prototype);\n            } else {\n                RT.prototype[stuffName] = protoStuff[stuffName];\n            }\n        }\n\n        return RT;\n    }\n\n    if (typeof define === \"function\" && define.amd) {\n        define('background/rt',[], moduleDefiniton);\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = moduleDefiniton;\n    } else {\n        window['RTIConstructor'] = moduleDefiniton();\n    }\n})();\n","/* global chrome */\n\ndefine('background/listenContent',[\n    'background/record',\n    'background/msgRouter',\n    'background/state',\n    'background/rt',\n    'common/ExtMsgConstructor',\n    'common/ActionsList'\n], function(record, msgRouter, state, RTConstructor, ExtensionMessage, ActionsList){\n    msgRouter.addListener(ActionsList.content.clipboardClick, makeRecordRemote);\n    msgRouter.addListener(ActionsList.content.startTicketClick, startTicket);\n    window.RT = new RTConstructor({\n        url: 'https://www.iponweb.net/rt/REST/1.0/'\n    });\n    function makeRecord(request, sender, sendResponse){\n        var recordString = record.make.apply(record, arguments);\n        sendResponse(recordString);\n    }\n    /**\n     *\n     * @param {Object} request\n     * @param {String} request.id\n     * @param {String} request.queue\n     * @param {String} request.subject\n     * @param {type} sender\n     * @param {type} sendResponse\n     * @returns {undefined}\n     */\n    function makeRecordRemote(request, sender, sendResponse){\n        var ticketDataFromContent = request.data;\n        if (!ticketDataFromContent || !ticketDataFromContent.id){\n            throw 'Ticket ID is required to get ticket info from RT';\n        }\n        RT.getTicket(ticketDataFromContent.id, makeRemoteAnswer.bind(this, sender.tab.id));\n    }\n\n    function makeRemoteAnswer(senderTabId, getTicketResponse){\n        var recordString;\n        getTicketResponse = getTicketResponse || {};\n        if ( getTicketResponse.success && getTicketResponse.ticketData){\n            recordString = record.make.apply(record, [getTicketResponse.ticketData]);\n            chrome.tabs.sendMessage(\n                senderTabId,\n                new ExtensionMessage({\n                    action: ActionsList.content.gotTicketString,\n                    data: recordString\n                })\n            );\n        }\n    }\n\n    function startTicket(request, sender, sendResponse){\n        var ticket = state.startTicket(request.data);\n        sendResponse(ticket);\n    }\n});\n\n\n","/* global chrome */\n\ndefine('background/popupController',[\n    'background/state',\n    'background/user',\n    'common/ExtMsgConstructor'\n], function (state, User, ExtMessage) {\n    function PopupController() {\n\n    }\n\n    PopupController.prototype.onStartClick = function (request, sender, sendResponse) {\n        state.toggleDayStart();\n        sendResponse(state.d);\n    };\n\n    PopupController.prototype.getWorkedTime = function (request, sender, sendResponse) {\n        User.update(\n            this._sendWorkedTimeRequest.bind(this, sender.tab && sender.tab.id || sender.id)\n        );\n    };\n\n    PopupController.prototype._sendWorkedTimeRequest = function (userName, senderTabId) {\n        var request = $.ajax({\n            method: 'GET',\n            url: 'https://www.iponweb.net/twiki/bin/view/IPonweb/TimesheetApril2016',\n            timeout: 10000,\n            success: this._onGetWorkedTime.bind(this, senderTabId, userName),\n            error: this._onFailedGetWorkedTime.bind(this)\n        });\n    };\n\n    PopupController.prototype._onGetWorkedTime = function (userName, senderTabId, res) {\n        if (!res) {\n            console.error('Empty worked time response');\n        }\n        //April2016 (Working hours - 168)\n        var s, rest, total, worked, color, restString;\n        s = res;\n        total = s.match(/April2016 \\(Working hours - (\\d+)\\)/);\n        total = total && total.length > 0 && total[1] || 'unknown';\n        worked = s\n            .substring(s.indexOf(userName)) // to reduce length and set starting point for an array\n            .split('\\n')\n            .splice(0, 3)[2];\n        worked = worked.replace(/\\s\\s+|<td\\s.+?>|<\\/td>/gim, '').replace(/\\s/gim, '');\n        worked = parseFloat(worked);\n\n        if (total && total !== 'unknown' && !isNaN(worked)) {\n            rest = total - worked;\n            if (rest > 0) {\n                color = '#DF0500';\n                restString = '(' + rest.toFixed(1) + 'h left)';\n                rest = '-' + rest.toFixed(1);\n            } else {\n                color = '#00910D';\n                rest = rest.toFixed(1);\n                restString = '(' + rest + 'h overworked)';\n            }\n        }\n        this.workedTimeStr = worked + '/' + total + ' ' + restString;\n        this.worked = {\n            worked: parseFloat(worked),\n            total: parseFloat(total),\n            rest: parseFloat(rest),\n            str: this.workedTimeStr\n        };\n\n        chrome.browserAction.setBadgeText({\n            text: String(rest)\n        });\n        chrome.browserAction.setTitle({\n            title: 'Worked/total :: ' + this.workedTimeStr\n        });\n        chrome.browserAction.setBadgeBackgroundColor({\n            color: color\n        });\n        state.setParam('workedTime', this.worked);\n//        chrome.runtime.sendMessage(\n//            {\n//                action: 'ts_ext_Ololololo',\n//                data: this.worked\n//            }\n//        );\n    };\n\n    PopupController.prototype._onFailedGetWorkedTime = function (res) {\n        console.error('Failed to get worked time', res);\n    };\n\n    return new PopupController();\n});\n\n\n","/* global chrome */\n\ndefine('background/listenPopup',[\n    'background/msgRouter',\n    'background/popupController',\n    'common/ActionsList'\n], function(msgRouter, popupController, ActionsList){\n    msgRouter.addListener(\n        ActionsList.popup.startClick,\n        popupController.onStartClick.bind(popupController)\n    );\n    msgRouter.addListener(\n        ActionsList.workedTime.needUpdate,\n        popupController.getWorkedTime.bind(popupController)\n    );\n});\n\n\n","/* global chrome */\n\ndefine('background/listenOptions',[\n    'background/msgRouter',\n    'background/state'\n], function(msgRouter, state){\n    msgRouter.addListener('setOptions', setOptions);\n\n    function setOptions(request){\n        try{\n            state.setOptions(request.opts);\n        }catch(err){\n            // and what?, TODO\n        }\n    }\n\n});\n\n\n","/**\n * This is the main JS file for background script, it is a subject to grunt's build routine.\n */\n\nrequire([\n    'background/user',\n    'background/clickHandler',\n    'background/listenContent',\n    'background/listenPopup',\n    'background/listenOptions'\n], function(User){\n    var bg = new BackGround();\n    User.update(bg.logName.bind(bg));\n\n    function BackGround(){\n        this.logName = function(a){\n            console.log( 'User name: ', User.getName() || User.getLastNameError());\n        };\n    }\n});\n\ndefine(\"BackgroundMain\", function(){});\n\n"]}